# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Quality Check - AladdinSDK Plugin Builder

on:
  push:
    branches: [ "*", "feat/*" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 setuptools build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=150 --statistics
    - name: Build plugin packages
      run: |
        mkdir ${{ runner.temp }}/build_results
        python asdk_agraph_plugin_builder.py -tl ${{ runner.temp }}/build_results -pv 0.0.1a1
    - name: (TEMP) Upload build results
      uses: actions/upload-artifact@v3
      with:
        name: aladdinsdk-plugins
        path: ${{ runner.temp }}/build_results
      if: ${{ always() }}
    # - name: Publish package
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     packages-dir: ${{ runner.temp }}/build_results/
    #     password: ${{ secrets.SIMPYL_TOKEN_PYPI }}
    - uses: actions/checkout@v3
    - name: Loop through directories
      # foreach: ${{ github.event.inputs.directories }}
      run: |
        for subdir_domain in "${{ runner.temp }}/build_results"/*; do
                if [ -d "$subdir_domain" ]; then
                  echo "================================================="
                  pwd
                  ls
                  echo "================================================="
                fi
              done
        # echo "Publishing artifacts for directory ${{ item.path }}"
        # github.actions.upload-artifact@v3 name="artifacts-${{ item.path }}" path="${{ item.path }}"
        # github.actions.create-release@v3 name="release-${{ item.path }}" tag="v1.0.0" body="This is a release for directory ${{ item.path }}"
  